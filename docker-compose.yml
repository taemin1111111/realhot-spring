version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: hotplace-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: wherehot
      MYSQL_USER: hotplace
      MYSQL_PASSWORD: hotplace123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db_schema_update.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./encrypt_all_passwords.sql:/docker-entrypoint-initdb.d/02-passwords.sql
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max-connections=1000
      - --innodb-buffer-pool-size=1G
      - --innodb-log-file-size=256M
      - --innodb-flush-log-at-trx-commit=2
      - --innodb-flush-method=O_DIRECT
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hotplace-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: unless-stopped

  # Spring Boot Application
  app:
    build: .
    container_name: hotplace-app
    ports:
      - "8083:8083"
    depends_on:
      - mysql
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/wherehot?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
      - SPRING_DATASOURCE_USERNAME=hotplace
      - SPRING_DATASOURCE_PASSWORD=hotplace123
      - SPRING_DATA_REDIS_HOST=redis
      - JAVA_OPTS=-Xms1g -Xmx4g -XX:+UseG1GC -XX:G1HeapRegionSize=16m -XX:+UseStringDeduplication
    volumes:
      - app_logs:/app/logs
      - ./src/main/webapp/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/hotplace/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: hotplace-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local

networks:
  default:
    driver: bridge
