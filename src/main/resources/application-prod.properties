# ===== 운영 환경 설정 (하루 1만명 처리 최적화) =====

# 프로파일 설정
spring.profiles.active=prod

# ===== 데이터베이스 설정 =====
# 운영환경에서는 반드시 환경변수로 설정
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/wherehot?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&useSSL=true&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:CHANGE_ME_IN_PRODUCTION}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===== HikariCP 최적화 (대용량 트래픽) =====
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.initialization-fail-timeout=1

# ===== JPA/Hibernate 최적화 =====
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.open-in-view=false

# ===== MyBatis 최적화 =====
mybatis.configuration.cache-enabled=true
mybatis.configuration.lazy-loading-enabled=false
mybatis.configuration.multiple-result-sets-enabled=true
mybatis.configuration.use-column-label=true
mybatis.configuration.use-generated-keys=true
mybatis.configuration.auto-mapping-behavior=partial
mybatis.configuration.default-statement-timeout=30
mybatis.configuration.default-fetch-size=100

# ===== 서버 최적화 (Tomcat) =====
server.tomcat.threads.max=1000
server.tomcat.threads.min-spare=100
server.tomcat.max-connections=20000
server.tomcat.accept-count=2000
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=60000
server.tomcat.max-keep-alive-requests=1000

# ===== 압축 최적화 =====
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
server.compression.min-response-size=512

# ===== 캐시 설정 =====
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=10000,expireAfterWrite=1h
spring.cache.cache-names=users,hotplaces,regions,categories,votes

# ===== Redis 설정 (대용량 세션 관리) =====
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=100
spring.data.redis.lettuce.pool.max-wait=-1ms
spring.data.redis.lettuce.pool.max-idle=20
spring.data.redis.lettuce.pool.min-idle=5

# ===== JWT 설정 =====
# 운영환경에서는 반드시 환경변수로 설정
app.jwt.secret=${JWT_SECRET:CHANGE_ME_IN_PRODUCTION}
app.jwt.expiration=86400
app.jwt.refresh-expiration=2592000

# ===== 로깅 최적화 (운영 환경) =====
logging.level.root=WARN
logging.level.com.wherehot.spring=INFO
logging.level.org.springframework.security=WARN
logging.level.org.mybatis=ERROR
logging.level.com.zaxxer.hikari=WARN
logging.file.name=logs/hotplace.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.logback.rollingpolicy.clean-history-on-start=true

# ===== 모니터링 설정 =====
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
management.metrics.export.prometheus.enabled=true

# ===== 보안 강화 =====
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=strict
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never

# ===== JSON 최적화 =====
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.write-null-map-values=false
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.fail-on-empty-beans=false

# ===== 비동기 처리 최적화 =====
spring.task.execution.pool.core-size=20
spring.task.execution.pool.max-size=200
spring.task.execution.pool.queue-capacity=1000
spring.task.execution.pool.keep-alive=60s
spring.task.execution.thread-name-prefix=async-

# ===== 웹 최적화 =====
spring.web.resources.cache.cachecontrol.max-age=31536000
spring.web.resources.cache.cachecontrol.cache-public=true
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/**
spring.web.resources.chain.strategy.fixed.enabled=true
spring.web.resources.chain.strategy.fixed.paths=/css/**,/js/**,/images/**

# ===== OAuth2 설정 =====
# 운영환경에서는 반드시 환경변수로 설정
spring.security.oauth2.client.registration.naver.client-id=${OAUTH2_NAVER_CLIENT_ID:CHANGE_ME_IN_PRODUCTION}
spring.security.oauth2.client.registration.naver.client-secret=${OAUTH2_NAVER_CLIENT_SECRET:CHANGE_ME_IN_PRODUCTION}
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=https://yourdomain.com/hotplace/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# ===== 애플리케이션 최적화 =====
spring.main.lazy-initialization=false
spring.jmx.enabled=false
spring.output.ansi.enabled=never
