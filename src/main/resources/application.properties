spring.application.name=taeminspring

# DevTools 자동 재시작 비활성화 (완전히 비활성화)
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false
spring.devtools.restart.additional-paths=

# ===== JSP 설정 =====
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# JSP 컴파일러 설정 (Spring Boot 3.x)
server.jsp-servlet.init-parameters.development=true
server.jsp-servlet.init-parameters.compiler-target-vm=17
server.jsp-servlet.init-parameters.compiler-source-vm=17
server.jsp-servlet.init-parameters.reload-interval=0
server.jsp-servlet.init-parameters.check-interval=0

# ===== 데이터베이스 설정 (HikariCP 최적화) =====
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/hothot?serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
spring.datasource.username=root
spring.datasource.password=a1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# HikariCP 성능 최적화 설정
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.initialization-fail-timeout=1

# ===== 서버 설정 (성능 최적화) =====
server.port=8083
server.servlet.context-path=/hotplace
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Tomcat 최적화 (동시접속 1000명 대응)
server.tomcat.threads.max=500
server.tomcat.threads.min-spare=100
server.tomcat.accept-count=1000
server.tomcat.max-connections=10000
server.tomcat.connection-timeout=20000

# ===== 세션 설정 =====
server.servlet.session.timeout=30m
server.servlet.session.cookie.max-age=1800
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false

# ===== 인코딩 설정 =====
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
server.servlet.encoding.force-request=true
server.servlet.encoding.force-response=true

# ===== 파일 업로드 설정 =====
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.resolve-lazily=false

# ===== 정적 리소스 최적화 =====
spring.web.resources.static-locations=classpath:/static/,classpath:/public/,file:src/main/webapp/
spring.web.resources.cache.cachecontrol.max-age=3600
spring.web.resources.cache.cachecontrol.cache-public=true

# ===== 커스텀 업로드 디렉토리 설정 =====
app.upload.dir=src/main/webapp/uploads/hpostsave

# ===== 파일 업로드 경로 설정 =====
file.upload.notice-path=src/main/webapp/uploads/notices
file.upload.place-path=src/main/webapp/uploads/places
file.upload.md-path=src/main/webapp/uploads/mdphotos
file.upload.community-path=src/main/webapp/uploads/community
file.upload.course-path=src/main/webapp/uploads/course

# ===== 개발 환경 설정 =====
# DevTools 완전 비활성화 (재시작 문제 해결)
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false
spring.devtools.restart.additional-paths=

# ===== 로깅 설정 =====
logging.level.com.wherehot.spring=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.com.zaxxer.hikari=WARN

# 운영 환경에서는 DEBUG 레벨 비활성화
logging.level.org.springframework.web.servlet.DispatcherServlet=WARN

# ===== 이메일 설정 (Brevo SMTP - model1과 동일) =====
spring.mail.host=smtp-relay.brevo.com
spring.mail.port=587
spring.mail.username=93959a002@smtp-brevo.com
spring.mail.password=gyEmT1QbCR5XjwaN
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# 발신자 정보 (model1과 동일)
spring.mail.from=chotaemin0920@gmail.com
spring.mail.from-name=어디핫?

# ===== MyBatis 설정 =====
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.type-aliases-package=com.wherehot.spring.entity
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.use-generated-keys=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30
mybatis.configuration.cache-enabled=true
mybatis.configuration.lazy-loading-enabled=false
mybatis.configuration.multiple-result-sets-enabled=true

# ===== JWT 설정 (대용량 트래픽 최적화) =====
app.jwt.secret=dGFlbWluc3ByaW5nSndUU2VjcmV0S2V5Rm9yV2hlcmVIb3RBcHBsaWNhdGlvbjIwMjRTdXBlclNlY3VyZUxvbmdLZXlGb3JIUzUxMkFsZ29yaXRobVdpdGhNaW5pbXVtNjRCeXRlc0ZvclNlY3VyaXR5
# Access Token: 1시간 (3600초) - 보안과 성능의 균형
app.jwt.expiration=3600
# Refresh Token: 30일 (2592000초) - 사용자 편의성
app.jwt.refresh-expiration=2592000

# ===== Redis 설정 =====
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# ===== OAuth2 설정 (네이버) =====
spring.security.oauth2.client.registration.naver.client-id=Uhipu8CFRcKrmTNw5xie
spring.security.oauth2.client.registration.naver.client-secret=32CliACoQi
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8083/hotplace/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# ===== 보안 강화 설정 =====
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=strict

# ===== 에러 페이지 설정 =====
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-exception=false
server.error.path=/error
server.error.whitelabel.enabled=false

# ===== 성능 최적화 (하루 1만명 대응) =====
# 데이터베이스 커넥션 풀 최적화 (동시접속 1000명 대응)
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# 서버 최적화 (Tomcat)
server.tomcat.threads.max=500
server.tomcat.threads.min-spare=50
server.tomcat.max-connections=10000
server.tomcat.accept-count=1000
server.tomcat.connection-timeout=20000

# 압축 설정
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# JPA/Hibernate 배치 처리 최적화
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# 캐시 설정
spring.cache.type=redis
spring.cache.redis.time-to-live=1800000
spring.cache.cache-names=users,hotplaces,regions

# 로깅 최적화 (운영 환경 대비)
logging.level.com.wherehot.spring=INFO
logging.level.org.springframework.security=WARN
logging.level.org.mybatis=WARN

# JSON 최적화
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.write-null-map-values=false
spring.jackson.default-property-inclusion=NON_NULL

# 메모리 최적화
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false