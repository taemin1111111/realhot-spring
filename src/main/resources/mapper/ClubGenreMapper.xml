<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wherehot.spring.mapper.ClubGenreMapper">

    <!-- Result Map 정의 - Model1 구조에 맞게 구현 -->
    <resultMap id="clubGenreResultMap" type="com.wherehot.spring.entity.ClubGenre">
        <id property="id" column="genre_id"/>
        <result property="genreName" column="genre_name"/>
        <result property="description" column="description"/>
        <result property="active" column="active"/>
        <result property="sortOrder" column="sort_order"/>
        <result property="icon" column="icon"/>
    </resultMap>

    <!-- 공통 SQL 조각들 - Model1 구조 -->
    <sql id="genreColumns">
        genre_id, genre_name, '' as description, true as active, 0 as sort_order, '' as icon
    </sql>

    <!-- 특정 장소의 장르 목록 조회 - hotplace_genre_map 테이블 사용 -->
    <select id="findGenresByPlaceId" parameterType="int" resultMap="clubGenreResultMap">
        SELECT cg.genre_id, cg.genre_name, '' as description, true as active, 0 as sort_order, '' as icon
        FROM club_genre cg
        INNER JOIN hotplace_genre_map hgm ON cg.genre_id = hgm.genre_id
        WHERE hgm.place_id = #{placeId}
        ORDER BY cg.genre_name
    </select>

    <!-- 모든 기본 장르 목록 조회 -->
    <select id="findAllGenres" resultMap="clubGenreResultMap">
        SELECT genre_id, genre_name, '' as description, true as active, 0 as sort_order, '' as icon
        FROM club_genre 
        ORDER BY genre_name
    </select>

    <!-- 모든 장르 목록과 특정 장소의 선택 여부 조회 -->
    <select id="findAllGenresWithSelection" parameterType="int" resultType="map">
        SELECT 
            g.genre_id as genreId,
            g.genre_name as genreName,
            '' as description,
            CASE WHEN hgm.place_id IS NOT NULL THEN 1 ELSE 0 END as isSelected
        FROM club_genre g
        LEFT JOIN hotplace_genre_map hgm ON g.genre_id = hgm.genre_id AND hgm.place_id = #{placeId}
        ORDER BY g.genre_name
    </select>

    <!-- 장소에 장르 추가 -->
    <insert id="insertPlaceGenre">
        INSERT INTO hotplace_genre_map (place_id, genre_id) 
        VALUES (#{placeId}, #{genreId})
    </insert>

    <!-- 장소에서 특정 장르 제거 -->
    <delete id="deletePlaceGenre">
        DELETE FROM hotplace_genre_map 
        WHERE place_id = #{placeId} AND genre_id = #{genreId}
    </delete>

    <!-- 장소의 모든 장르 제거 -->
    <delete id="deleteAllPlaceGenres">
        DELETE FROM hotplace_genre_map 
        WHERE place_id = #{placeId}
    </delete>

    <!-- 장소-장르 관계 존재 여부 확인 -->
    <select id="countPlaceGenre" resultType="int">
        SELECT COUNT(*) 
        FROM hotplace_genre_map 
        WHERE place_id = #{placeId} AND genre_id = #{genreId}
    </select>

    <!-- 인기 장르 순위 조회 -->
    <select id="findPopularGenres" parameterType="int" resultType="map">
        SELECT 
            g.genre_id as genreId,
            g.genre_name as genreName,
            COUNT(hgm.place_id) as placeCount
        FROM club_genre g
        LEFT JOIN hotplace_genre_map hgm ON g.genre_id = hgm.genre_id
        GROUP BY g.genre_id, g.genre_name
        ORDER BY placeCount DESC, g.genre_name
        LIMIT #{limit}
    </select>

    <!-- 장르 ID로 장르 조회 -->
    <select id="findGenreById" parameterType="int" resultMap="clubGenreResultMap">
        SELECT genre_id, genre_name, '' as description, true as active, 0 as sort_order, '' as icon
        FROM club_genre 
        WHERE genre_id = #{genreId}
    </select>

    <!-- 장르명으로 장르 조회 -->
    <select id="findGenreByName" parameterType="string" resultMap="clubGenreResultMap">
        SELECT genre_id, genre_name, '' as description, true as active, 0 as sort_order, '' as icon
        FROM club_genre 
        WHERE genre_name = #{genreName}
        LIMIT 1
    </select>

</mapper>
