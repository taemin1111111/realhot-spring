<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wherehot.spring.mapper.CourseReactionMapper">

    <!-- 결과 매핑 -->
    <resultMap id="CourseReactionResultMap" type="com.wherehot.spring.entity.CourseReaction">
        <id column="course_id" property="courseId"/>
        <result column="user_key" property="userKey"/>
        <result column="reaction" property="reaction"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>

    <!-- 사용자의 특정 코스 리액션 조회 -->
    <select id="findByCourseIdAndUserKey" resultMap="CourseReactionResultMap">
        SELECT course_id, user_key, reaction, created_at
        FROM course_reaction
        WHERE course_id = #{courseId} AND user_key = #{userKey}
    </select>

    <!-- 코스의 모든 리액션 조회 -->
    <select id="findByCourseId" resultMap="CourseReactionResultMap">
        SELECT course_id, user_key, reaction, created_at
        FROM course_reaction
        WHERE course_id = #{courseId}
    </select>

    <!-- 좋아요 개수 조회 -->
    <select id="countLikesByCourseId" resultType="int">
        SELECT COUNT(*)
        FROM course_reaction
        WHERE course_id = #{courseId} AND reaction = 'LIKE'
    </select>

    <!-- 싫어요 개수 조회 -->
    <select id="countDislikesByCourseId" resultType="int">
        SELECT COUNT(*)
        FROM course_reaction
        WHERE course_id = #{courseId} AND reaction = 'DISLIKE'
    </select>

    <!-- 리액션 추가/수정 (ON DUPLICATE KEY UPDATE) -->
    <insert id="insertOrUpdateReaction" parameterType="com.wherehot.spring.entity.CourseReaction">
        INSERT INTO course_reaction (course_id, user_key, reaction, created_at)
        VALUES (#{courseId}, #{userKey}, #{reaction}, #{createdAt})
        ON DUPLICATE KEY UPDATE
        reaction = VALUES(reaction),
        created_at = VALUES(created_at)
    </insert>

    <!-- 리액션 삭제 -->
    <delete id="deleteReaction">
        DELETE FROM course_reaction
        WHERE course_id = #{courseId} AND user_key = #{userKey}
    </delete>

    <!-- 사용자의 리액션 존재 여부 확인 -->
    <select id="existsByCourseIdAndUserKey" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM course_reaction
        WHERE course_id = #{courseId} AND user_key = #{userKey}
    </select>
    
    <!-- 코스의 모든 리액션 삭제 -->
    <delete id="deleteAllReactionsByCourseId">
        DELETE FROM course_reaction WHERE course_id = #{courseId}
    </delete>

</mapper>
