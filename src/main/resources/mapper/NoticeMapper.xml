<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wherehot.spring.mapper.NoticeMapper">

    <!-- Notice ResultMap -->
    <resultMap id="NoticeResultMap" type="com.wherehot.spring.entity.Notice">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="authorId" column="author_id"/>
        <result property="authorNickname" column="author_nickname"/>
        <result property="viewCount" column="view_count"/>
        <result property="isPinned" column="is_pinned"/>
        <result property="isActive" column="is_active"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 기본 SELECT 절 -->
    <sql id="selectNoticeColumns">
        SELECT n.*, m.nickname as author_nickname
        FROM notice n
        LEFT JOIN member m ON n.author_id = m.userid
    </sql>

    <!-- 모든 공지사항 조회 (페이징) -->
    <select id="findAll" resultMap="NoticeResultMap">
        <include refid="selectNoticeColumns"/>
        ORDER BY n.is_pinned DESC, n.created_at DESC
        LIMIT #{offset}, #{size}
    </select>

    <!-- 활성 공지사항 조회 -->
    <select id="findActiveNotices" resultMap="NoticeResultMap">
        <include refid="selectNoticeColumns"/>
        WHERE n.is_active = true
        ORDER BY n.is_pinned DESC, n.created_at DESC
        LIMIT #{offset}, #{size}
    </select>

    <!-- 고정 공지사항 조회 -->
    <select id="findPinnedNotices" resultMap="NoticeResultMap">
        <include refid="selectNoticeColumns"/>
        WHERE n.is_pinned = true
        AND n.is_active = true
        ORDER BY n.created_at DESC
    </select>

    <!-- ID로 공지사항 조회 -->
    <select id="findById" parameterType="int" resultMap="NoticeResultMap">
        <include refid="selectNoticeColumns"/>
        WHERE n.id = #{id}
    </select>

    <!-- 작성자별 공지사항 조회 -->
    <select id="findByAuthorId" resultMap="NoticeResultMap">
        <include refid="selectNoticeColumns"/>
        WHERE n.author_id = #{authorId}
        ORDER BY n.created_at DESC
        LIMIT #{offset}, #{size}
    </select>

    <!-- 공지사항 검색 -->
    <select id="searchNotices" resultMap="NoticeResultMap">
        <include refid="selectNoticeColumns"/>
        WHERE (n.title LIKE CONCAT('%', #{keyword}, '%')
        OR n.content LIKE CONCAT('%', #{keyword}, '%'))
        AND n.is_active = true
        ORDER BY n.is_pinned DESC, n.created_at DESC
        LIMIT #{offset}, #{size}
    </select>

    <!-- 최신 공지사항 조회 -->
    <select id="findRecentNotices" parameterType="int" resultMap="NoticeResultMap">
        <include refid="selectNoticeColumns"/>
        WHERE n.is_active = true
        ORDER BY n.created_at DESC
        LIMIT #{limit}
    </select>

    <!-- 공지사항 등록 -->
    <insert id="insertNotice" parameterType="com.wherehot.spring.entity.Notice" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO notice (
            title,
            content,
            author_id,
            view_count,
            is_pinned,
            is_active,
            created_at,
            updated_at
        ) VALUES (
            #{title},
            #{content},
            #{authorId},
            #{viewCount, jdbcType=INTEGER},
            #{isPinned, jdbcType=BOOLEAN},
            #{isActive, jdbcType=BOOLEAN},
            #{createdAt},
            #{updatedAt}
        )
    </insert>

    <!-- 공지사항 수정 -->
    <update id="updateNotice" parameterType="com.wherehot.spring.entity.Notice">
        UPDATE notice
        SET 
            title = #{title},
            content = #{content},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <!-- 공지사항 삭제 -->
    <delete id="deleteNotice" parameterType="int">
        DELETE FROM notice WHERE id = #{id}
    </delete>

    <!-- 조회수 증가 -->
    <update id="updateViewCount" parameterType="int">
        UPDATE notice
        SET view_count = view_count + 1
        WHERE id = #{id}
    </update>

    <!-- 고정 상태 변경 -->
    <update id="updatePinnedStatus">
        UPDATE notice
        SET is_pinned = #{isPinned}
        WHERE id = #{id}
    </update>

    <!-- 활성 상태 변경 -->
    <update id="updateActiveStatus">
        UPDATE notice
        SET is_active = #{isActive}
        WHERE id = #{id}
    </update>

    <!-- 전체 공지사항 수 조회 -->
    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM notice
    </select>

    <!-- 활성 공지사항 수 조회 -->
    <select id="countActive" resultType="int">
        SELECT COUNT(*)
        FROM notice
        WHERE is_active = true
    </select>

    <!-- 검색 결과 수 조회 -->
    <select id="countSearchResults" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM notice
        WHERE (title LIKE CONCAT('%', #{keyword}, '%')
        OR content LIKE CONCAT('%', #{keyword}, '%'))
        AND is_active = true
    </select>

    <!-- 작성자별 공지사항 수 조회 -->
    <select id="countByAuthorId" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM notice
        WHERE author_id = #{authorId}
    </select>

</mapper>
